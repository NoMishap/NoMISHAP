version: '2.2'
services:
    # index, search & agregation
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    container_name: elastic
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - $PWD/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - "es-data:/usr/share/elasticsearch/data"
    networks:
      - logging

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    container_name: elastic2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elastic"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
        - $PWD/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        - "es-data2:/usr/share/elasticsearch/data"
    networks:
        - logging

  # UI
  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    container_name: kibana
    ports:
      - 5601:5601
    volumes:
      - $PWD/kibana/config/kibana.yml:/etc/kibana/kibana.yml
    networks:
      - logging
    depends_on:
      - elasticsearch

  # indexer
  logstash:
    image: docker.elastic.co/logstash/logstash:6.3.2
    container_name: logstash
    command: logstash -f /config/
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
     - 8085:8085
    volumes:
      - $PWD/logstash/config:/config
    networks:
      - logging
    depends_on:
      - elasticsearch

  apmserver:
    image: docker.elastic.co/apm/apm-server:6.3.2
    container_name: apmserver
    ports:
     - 8200:8200
    volumes:
      - $PWD/apmserver/config/apm-server.yml:/usr/share/apm-server/apm-server.yml
    networks:
      - logging
    depends_on:
      - elasticsearch

  webapp:
    build: ../PaaSProxies/OpenShiftProxy/
    container_name: webapp
    ports:
        - 8080:8080
    networks:
        - logging

volumes:
  es-data:
    driver: local
  es-data2:
    driver: local

networks:
  logging:
    driver: bridge
